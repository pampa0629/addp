{
  "permissions": {
    "allow": [
      "Bash(make:*)",
      "Bash(go run:*)",
      "Bash(npm install)",
      "Bash(npm run dev:*)",
      "Bash(open http://localhost:5173/)",
      "Bash(go mod:*)",
      "Bash(open http://localhost:5170/)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(docker pull:*)",
      "Bash(docker-compose:*)",
      "Bash(docker exec:*)",
      "Read(//Users/pampa/.docker/**)",
      "Bash(go:*)",
      "Read(//private/tmp/**)",
      "Bash(cat:*)",
      "Bash(curl:*)",
      "Bash(git stash:*)",
      "Bash(find:*)",
      "Bash(if [ ! -f .env ])",
      "Bash(then cp .env.example .env)",
      "Bash(else echo \".env文件已存在\")",
      "Bash(fi)",
      "Bash(lsof:*)",
      "Bash(echo:*)",
      "Bash(docker ps:*)",
      "Bash(pkill:*)",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"DROP TABLE IF EXISTS metadata.fields CASCADE;\")",
      "Bash(awk:*)",
      "Bash(1 echo -n \"✓ System (8080):   \" curl -s http://localhost:8080/)",
      "Bash(head -c 50 echo \"\" echo -n \"✓ Manager (8081):  \" curl -s http://localhost:8081/ 2)",
      "Bash(1 echo -n \"✓ Meta (8082):     \" curl -s http://localhost:8082/health 2)",
      "Bash(1 echo \"\" echo \"【运行的Go进程】\" ps aux)",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"\nSELECT schema_name FROM information_schema.schemata \nWHERE schema_name NOT IN (''pg_catalog'', ''information_schema'') \nORDER BY schema_name;\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6IlN1cGVyQWRtaW4iLCJleHAiOjE3NTk3NjYyMTQsImlhdCI6MTc1OTc2NDQxNH0.qEJ-8YOyKkLy-ADK3s0fzYlXuuB7seLKu6SNEob9Bsc\")",
      "Bash(kill:*)",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"\\d metadata.schemas\")",
      "Bash(xargs kill:*)",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"\\d system.resources\")",
      "Bash(psql:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzU5NzY2MjE0LCJpYXQiOjE3NTk3NjQ0MTR9.qEJ-8YOyKkLy-ADK3s0fzYlXuuB7seLKu6SNEob9Bsc\")",
      "Bash(python3:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzU5NzcwMjg2LCJpYXQiOjE3NTk3Njg0ODZ9.w_GrvAMu6ypgruFpO7TjEmtBteH2juYWyNYXdQKcr3I\")",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzU5NzcwMjg2LCJpYXQiOjE3NTk3Njg0ODZ9.w_GrvAMu6ypgruFpO7TjEmtBteH2juYWyNYXdQKcr3I\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, name, resource_type, connection_info->>''host'' as host, connection_info->>''port'' as port, connection_info->>''database'' as database FROM system.resources WHERE tenant_id = 1;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"\\l\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d postgres -c \"CREATE DATABASE business OWNER addp;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, resource_id, schema_name, scan_status, table_count, total_size FROM metadata.schemas WHERE resource_id = 3;\")",
      "Bash(docker run:*)",
      "Bash(postgres:15)",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, resource_id, schema_name, scan_status, table_count FROM metadata.schemas WHERE resource_id = 3 ORDER BY schema_name;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, name, resource_type, connection_info->>''host'' as host, connection_info->>''port'' as port FROM system.resources WHERE tenant_id = 1 ORDER BY id;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, name, connection_info FROM system.resources WHERE id = 4;\" -x)",
      "Read(//tmp/**)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzU5ODA5MTYwLCJpYXQiOjE3NTk4MDczNjB9.7QY7uOUi6Z6anknlMmDQ-plbyNjKeYqxMWSrnq6Zsks\")",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzU5ODA5MTYwLCJpYXQiOjE3NTk4MDczNjB9.7QY7uOUi6Z6anknlMmDQ-plbyNjKeYqxMWSrnq6Zsks\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, resource_id, schema_name, scan_status FROM metadata.schemas WHERE resource_id = 4 ORDER BY schema_name;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT id, resource_id, schema_name, scan_status, table_count, total_size FROM metadata.schemas WHERE resource_id = 4 ORDER BY schema_name;\")",
      "Bash(PGPASSWORD=addp_password psql -h localhost -U addp -d addp -c \"SELECT t.id, t.schema_id, t.table_name, s.schema_name FROM metadata.tables t LEFT JOIN metadata.schemas s ON t.schema_id = s.id WHERE s.resource_id = 4 ORDER BY s.schema_name, t.table_name;\")",
      "Bash(PGPASSWORD=addp_password psql:*)",
      "Bash(__NEW_LINE__ curl -X POST http://localhost:8082/api/scan/resource )",
      "Bash(export PGPASSWORD=addp_password)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(npm run build:*)",
      "Bash(mkdir:*)",
      "Read(///**)",
      "Bash(npm install:*)",
      "Bash(for:*)",
      "Bash(done)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(brew install:*)",
      "Read(//Applications/**)",
      "Bash(ps:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6Inp1aHUxIiwiZXhwIjoxNzYwMTgyMzcyLCJpYXQiOjE3NjAxODA1NzJ9.uWL-2UEtr8TVZ-IDDFoA7tJqMpaY4SGEX1ctZo4J9_c\")",
      "Bash(nc:*)",
      "Bash(PGPASSWORD=business_pass psql:*)",
      "Bash(PGPASSWORD=business_password psql -h localhost -p 5433 -U business_user -d business -c \"SELECT current_database(), current_user;\")"
    ],
    "deny": [],
    "ask": []
  }
}
