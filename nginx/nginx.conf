# 全域数据平台 Nginx 配置
# 适用于生产环境部署

# Gateway 后端
upstream gateway_backend {
    server gateway:8000;
    # 如果需要负载均衡，添加更多实例
    # server gateway2:8000;
    # server gateway3:8000;
}

server {
    listen 80;
    server_name localhost;

    # 日志配置
    access_log /var/log/nginx/addp-access.log;
    error_log /var/log/nginx/addp-error.log warn;

    # 客户端最大上传大小
    client_max_body_size 100M;

    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 前端静态文件
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;

        # HTML 文件不缓存（确保更新后立即生效）
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # 静态资源缓存 1 年
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API 请求代理到 Gateway
    location /api/ {
        proxy_pass http://gateway_backend;

        # 代理请求头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 缓冲区设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 健康检查端点（不记录访问日志）
    location /health {
        proxy_pass http://gateway_backend/health;
        access_log off;
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS 配置示例（取消注释并配置证书后启用）
# server {
#     listen 443 ssl http2;
#     server_name addp.example.com;
#
#     # SSL 证书配置
#     ssl_certificate /etc/ssl/certs/addp.crt;
#     ssl_certificate_key /etc/ssl/private/addp.key;
#
#     # SSL 优化配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS（HTTP 严格传输安全）
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # 其他安全头
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#
#     # 其他配置同 HTTP（复制上面的 location 配置）
#     # ...
# }
#
# # HTTP 自动重定向到 HTTPS
# server {
#     listen 80;
#     server_name addp.example.com;
#     return 301 https://$server_name$request_uri;
# }